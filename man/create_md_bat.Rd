% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_md_bat.R
\name{create_md_bat}
\alias{create_md_bat}
\title{Erstell ein batch-Datei, um den Megadetector auf dem Zielsystem laufen zu lassen}
\usage{
create_md_bat(
  pics_dir,
  md_out = pics_dir,
  py_scripts_loc = NULL,
  md_model_loc = NULL,
  force.overwrite = FALSE,
  bat_loc = NULL,
  run_info = FALSE,
  checkpoint_freq = 500
)
}
\arguments{
\item{pics_dir}{character, Verzeichnis in dem der Megadetector rekursiv Bilder detektieren und klassifizieren soll}

\item{md_out}{character, Verzeichnis in dem die "md_out.json" gespeichert werden soll. Per Default entspricht das dem pics_dir Verzeichnis}

\item{py_scripts_loc}{character, Verzeichnis in dem die für Megadetector Python-Skripte hinterlegt sind (s. DMCrAI::setup_md())}

\item{md_model_loc, }{character, Verzeichnis in dem Megadetector-Modell liegt (s. DMCrAI::setup_md())}

\item{force.overwrite}{boolean, gibt an, ob die frühere md_out.json überschrieben werden soll. Falls nicht, und sofern eine md_out.json in md_out liegt, werde frühere Klassifikationen übernommen und nur neue Bilder klassifiziert}

\item{bat_loc}{character, Pfad unter dem die Batch-Datei abgelegt werden soll (bspw. here::here("md.bat"))}

\item{run_info}{boolean, gibt an, ob Checkpoints erstellt und der Konsolenoutput während der Megadetector-Prozessierung gespeichert werden soll (TEST VERSION!)}

\item{checkpoint_freq}{numeric, gibt die Häufigkeit an mit der Checkpoint erstellt werden}
}
\description{
Erstell ein batch-Datei, um den Megadetector auf dem Zielsystem laufen zu lassen
}
